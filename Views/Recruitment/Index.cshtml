@using AscendedGuild.Models.Recruitement
@using AscendedGuild.ViewModels.Recruitement
@using Microsoft.AspNetCore.Identity

@model RecruitmentViewModel

@inject SignInManager<IdentityUser> SignInManager

@section Style {
	<link rel="stylesheet"
		href="/css/shared.css" />
		
	<link rel="stylesheet"
		href="/css/pages/recruitment.css" />
}


@if (!User.IsInRole("Administrator"))
{
	<!-- Show apply link to regular visitors -->
	<section class="apply">
		<a
		target="_blank" 
		rel="noopener noreferrer"
		class="apply__button"
		href="https://forms.gle/7ZDWePMVqoagR7Sy8">
			&lt;APPLY HERE&gt;
		</a>
	</section>
}

<form 
	asp-controller="Recruitment" 
	asp-action="Edit" 
	method="post"
	class="form-container">

	
	@if (User.IsInRole("Administrator"))
	{	
		<!-- The Administrator user can submit the changes made -->
		<div class="submit-button-container">
			<button type="submit">
				Save
			</button>	
		</div>
	}

	<section id="class-grid">
		@foreach (var playerClass in Model.PlayerClasses)
		{
			string classCardClass = 
				"class-card--"
				+	(playerClass.IsInDemand ? "in-demand" : "not-in-demand")
				+ " class-card";

			<article class="@classCardClass">
				<div class="card-title">
					<h2 
					class="class-name" 
					id=@("class" + playerClass.PlayerClassId)>
						@playerClass.Name
					</h2>
					
					<img
					class="class-icon"
					src=@playerClass.ImageUrl 
					alt="Icon representation of the player class." />			
				</div>

				<div class="specs">
					@foreach (var spec in playerClass.Specs)
					{
						string specClass = 
							"spec spec--" 
							+ (spec.Demand == DemandEnum.CLOSED ? "not-in-demand" : "in-demand");

						<div class="@specClass">
							<img
							class="spec-icon"
							src=@spec.ImageUrl 
							alt="Icon representation of the specialization." />

							<h2 class="spec-name">
								@(spec.Name + ":")
							</h2>

							<h2 class="demand" id=@("demand--" + spec.Demand.ToString("F"))>
								@spec.Demand.ToString("F")
							</h2>								

							<!-- The Administrator user can edit the demand for each specification -->
							@if (User.IsInRole("Administrator"))
							{								
								<select class="select-demand"
								name="IncomingSpecs[@spec.SpecId]"
								asp-for="@spec.Demand"
								asp-items="Html.GetEnumSelectList<DemandEnum>()">
								</select>									
							}
						</div>					
					}					
				</div>
			</article>
		}
	</section>
</form>